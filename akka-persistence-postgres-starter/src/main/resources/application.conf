//akka.persistence.journal.plugin = ""
//akka.persistence.snapshot-store.plugin = ""

akka {
  persistence {
    journal {
      plugin = "jdbc-journal"
      // Enable the line below to automatically start the journal when the actorsystem is started
      // auto-start-journals = ["jdbc-journal"]
    }
    snapshot-store {
      plugin = "jdbc-snapshot-store"
      // Enable the line below to automatically start the snapshot-store when the actorsystem is started
      // auto-start-snapshot-stores = ["jdbc-snapshot-store"]
    }
  }

  // loglevel = "WARNING"
  // stdout-loglevel = "OFF"
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  log-dead-letters = off
  log-dead-letters-during-shutdown = off

  actor {
    serialization-bindings {
      //commands
      "com.github.daggerok.akka.Main$SaveInvoice" = jackson-json
      // events
      "com.github.daggerok.akka.Main$InvoiceSaved" = jackson-json
    }
  }
}

jdbc-journal {
  slick = ${slick}
}

# the akka-persistence-snapshot-store in use
jdbc-snapshot-store {
  slick = ${slick}
}

# the akka-persistence-query provider in use
jdbc-read-journal {
  slick = ${slick}
}

slick {
  profile = "slick.jdbc.PostgresProfile$"
  db {
    host = "127.0.0.1"
    host = ${?POSTGRES_HOST}
    url = "jdbc:postgresql://"${slick.db.host}":5432/akka?reWriteBatchedInserts=true"
    user = "akka"
    user = ${?POSTGRES_USER}
    password = "akka"
    password = ${?POSTGRES_PASSWORD}
    driver = "org.postgresql.Driver"
    numThreads = 5
    maxConnections = 5
    minConnections = 1
  }
}
